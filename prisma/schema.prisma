// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id() @default(autoincrement())
  username  String      @unique @db.VarChar(30)
  email     String      @unique @db.VarChar(60)
  enabled   Boolean     @default(true)
  password  String      @db.VarChar(255)
  phone     String?     @db.VarChar(16)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @default(now()) @updatedAt() @map("updated_at")
  lastLogin DateTime?   @default(now()) @map("last_login")
  UserRoles UserRoles[]

  @@map("users")
}

model UserRoles {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  role       Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId     Int
  assignedAt DateTime @default(now())
  assignedBy String?  @db.VarChar(30)
  updatedAt  DateTime @updatedAt() @map("updated_at")

  @@id([userId, roleId])
  @@map("user_roles")
}

model Role {
  id          Int         @id() @default(autoincrement())
  name        String      @unique @db.VarChar(255)
  description String?     @db.VarChar(255)
  createBy    String?     @db.VarChar(30)
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @updatedAt() @map("updated_at")
  UserRoles   UserRoles[]

  @@map("role")
}
